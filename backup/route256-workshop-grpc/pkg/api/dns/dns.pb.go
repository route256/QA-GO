// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.4
// source: api/dns/dns.proto

package dns

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DNSService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DNSService) Reset() {
	*x = DNSService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dns_dns_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNSService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSService) ProtoMessage() {}

func (x *DNSService) ProtoReflect() protoreflect.Message {
	mi := &file_api_dns_dns_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSService.ProtoReflect.Descriptor instead.
func (*DNSService) Descriptor() ([]byte, []int) {
	return file_api_dns_dns_proto_rawDescGZIP(), []int{0}
}

func (x *DNSService) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DNSAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *DNSAddress) Reset() {
	*x = DNSAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dns_dns_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNSAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSAddress) ProtoMessage() {}

func (x *DNSAddress) ProtoReflect() protoreflect.Message {
	mi := &file_api_dns_dns_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSAddress.ProtoReflect.Descriptor instead.
func (*DNSAddress) Descriptor() ([]byte, []int) {
	return file_api_dns_dns_proto_rawDescGZIP(), []int{1}
}

func (x *DNSAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type DNSServiceToAddressBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service *DNSService   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Address []*DNSAddress `protobuf:"bytes,2,rep,name=address,proto3" json:"address,omitempty"`
}

func (x *DNSServiceToAddressBinding) Reset() {
	*x = DNSServiceToAddressBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_dns_dns_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNSServiceToAddressBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSServiceToAddressBinding) ProtoMessage() {}

func (x *DNSServiceToAddressBinding) ProtoReflect() protoreflect.Message {
	mi := &file_api_dns_dns_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSServiceToAddressBinding.ProtoReflect.Descriptor instead.
func (*DNSServiceToAddressBinding) Descriptor() ([]byte, []int) {
	return file_api_dns_dns_proto_rawDescGZIP(), []int{2}
}

func (x *DNSServiceToAddressBinding) GetService() *DNSService {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *DNSServiceToAddressBinding) GetAddress() []*DNSAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

var File_api_dns_dns_proto protoreflect.FileDescriptor

var file_api_dns_dns_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x6e, 0x73, 0x2f, 0x64, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x32,
	0x35, 0x36, 0x2e, 0x71, 0x61, 0x34, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x20, 0x0a, 0x0a, 0x44, 0x4e, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x0a, 0x44, 0x4e, 0x53, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x1a,
	0x44, 0x4e, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x7a,
	0x6f, 0x6e, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x32, 0x35, 0x36, 0x2e, 0x71, 0x61, 0x34, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x4e,
	0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x45, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x32,
	0x35, 0x36, 0x2e, 0x71, 0x61, 0x34, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x4e, 0x53, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0xc1, 0x02, 0x0a, 0x03, 0x44, 0x4e, 0x53,
	0x12, 0x5f, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x3b, 0x2e, 0x6f,
	0x7a, 0x6f, 0x6e, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x32, 0x35, 0x36, 0x2e, 0x71, 0x61, 0x34,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44,
	0x4e, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x61, 0x0a, 0x0a, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x3b, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x32, 0x35, 0x36, 0x2e,
	0x71, 0x61, 0x34, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x44, 0x4e, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x76, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x2b, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x32,
	0x35, 0x36, 0x2e, 0x71, 0x61, 0x34, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x4e, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a,
	0x3b, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x32, 0x35, 0x36, 0x2e,
	0x71, 0x61, 0x34, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x44, 0x4e, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x39, 0x5a, 0x37,
	0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x64, 0x65, 0x76, 0x2f,
	0x73, 0x76, 0x70, 0x65, 0x74, 0x72, 0x6f, 0x76, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x32, 0x35,
	0x36, 0x2d, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x64, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_dns_dns_proto_rawDescOnce sync.Once
	file_api_dns_dns_proto_rawDescData = file_api_dns_dns_proto_rawDesc
)

func file_api_dns_dns_proto_rawDescGZIP() []byte {
	file_api_dns_dns_proto_rawDescOnce.Do(func() {
		file_api_dns_dns_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_dns_dns_proto_rawDescData)
	})
	return file_api_dns_dns_proto_rawDescData
}

var file_api_dns_dns_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_dns_dns_proto_goTypes = []interface{}{
	(*DNSService)(nil),                 // 0: ozon.route256.qa4.workshop.grpc.DNSService
	(*DNSAddress)(nil),                 // 1: ozon.route256.qa4.workshop.grpc.DNSAddress
	(*DNSServiceToAddressBinding)(nil), // 2: ozon.route256.qa4.workshop.grpc.DNSServiceToAddressBinding
	(*emptypb.Empty)(nil),              // 3: google.protobuf.Empty
}
var file_api_dns_dns_proto_depIdxs = []int32{
	0, // 0: ozon.route256.qa4.workshop.grpc.DNSServiceToAddressBinding.service:type_name -> ozon.route256.qa4.workshop.grpc.DNSService
	1, // 1: ozon.route256.qa4.workshop.grpc.DNSServiceToAddressBinding.address:type_name -> ozon.route256.qa4.workshop.grpc.DNSAddress
	2, // 2: ozon.route256.qa4.workshop.grpc.DNS.Register:input_type -> ozon.route256.qa4.workshop.grpc.DNSServiceToAddressBinding
	2, // 3: ozon.route256.qa4.workshop.grpc.DNS.Unregister:input_type -> ozon.route256.qa4.workshop.grpc.DNSServiceToAddressBinding
	0, // 4: ozon.route256.qa4.workshop.grpc.DNS.GetAddress:input_type -> ozon.route256.qa4.workshop.grpc.DNSService
	3, // 5: ozon.route256.qa4.workshop.grpc.DNS.Register:output_type -> google.protobuf.Empty
	3, // 6: ozon.route256.qa4.workshop.grpc.DNS.Unregister:output_type -> google.protobuf.Empty
	2, // 7: ozon.route256.qa4.workshop.grpc.DNS.GetAddress:output_type -> ozon.route256.qa4.workshop.grpc.DNSServiceToAddressBinding
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_dns_dns_proto_init() }
func file_api_dns_dns_proto_init() {
	if File_api_dns_dns_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_dns_dns_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNSService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dns_dns_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNSAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_dns_dns_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DNSServiceToAddressBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_dns_dns_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_dns_dns_proto_goTypes,
		DependencyIndexes: file_api_dns_dns_proto_depIdxs,
		MessageInfos:      file_api_dns_dns_proto_msgTypes,
	}.Build()
	File_api_dns_dns_proto = out.File
	file_api_dns_dns_proto_rawDesc = nil
	file_api_dns_dns_proto_goTypes = nil
	file_api_dns_dns_proto_depIdxs = nil
}
