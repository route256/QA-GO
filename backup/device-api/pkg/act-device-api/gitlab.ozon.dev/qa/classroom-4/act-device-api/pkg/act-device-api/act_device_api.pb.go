// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: ozonmp/act_device_api/v1/act_device_api.proto

package act_device_api

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Language int32

const (
	Language_LANG_ENGLISH Language = 0
	Language_LANG_RUSSIAN Language = 1
	Language_LANG_ESPANOL Language = 2
	Language_LANG_ITALIAN Language = 3
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0: "LANG_ENGLISH",
		1: "LANG_RUSSIAN",
		2: "LANG_ESPANOL",
		3: "LANG_ITALIAN",
	}
	Language_value = map[string]int32{
		"LANG_ENGLISH": 0,
		"LANG_RUSSIAN": 1,
		"LANG_ESPANOL": 2,
		"LANG_ITALIAN": 3,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_enumTypes[0].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_ozonmp_act_device_api_v1_act_device_api_proto_enumTypes[0]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_STATUS_CREATED     Status = 0
	Status_STATUS_IN_PROGRESS Status = 1
	Status_STATUS_DELIVERED   Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_CREATED",
		1: "STATUS_IN_PROGRESS",
		2: "STATUS_DELIVERED",
	}
	Status_value = map[string]int32{
		"STATUS_CREATED":     0,
		"STATUS_IN_PROGRESS": 1,
		"STATUS_DELIVERED":   2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_ozonmp_act_device_api_v1_act_device_api_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{1}
}

type AckNotificationV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId uint64 `protobuf:"varint,1,opt,name=notificationId,proto3" json:"notificationId,omitempty"`
}

func (x *AckNotificationV1Request) Reset() {
	*x = AckNotificationV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckNotificationV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckNotificationV1Request) ProtoMessage() {}

func (x *AckNotificationV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckNotificationV1Request.ProtoReflect.Descriptor instead.
func (*AckNotificationV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{0}
}

func (x *AckNotificationV1Request) GetNotificationId() uint64 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

type AckNotificationV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AckNotificationV1Response) Reset() {
	*x = AckNotificationV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckNotificationV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckNotificationV1Response) ProtoMessage() {}

func (x *AckNotificationV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckNotificationV1Response.ProtoReflect.Descriptor instead.
func (*AckNotificationV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{1}
}

func (x *AckNotificationV1Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SubscribeNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId uint64 `protobuf:"varint,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
}

func (x *SubscribeNotificationRequest) Reset() {
	*x = SubscribeNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeNotificationRequest) ProtoMessage() {}

func (x *SubscribeNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeNotificationRequest.ProtoReflect.Descriptor instead.
func (*SubscribeNotificationRequest) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeNotificationRequest) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

type GetNotificationV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId uint64 `protobuf:"varint,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
}

func (x *GetNotificationV1Request) Reset() {
	*x = GetNotificationV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationV1Request) ProtoMessage() {}

func (x *GetNotificationV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationV1Request.ProtoReflect.Descriptor instead.
func (*GetNotificationV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetNotificationV1Request) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

type GetNotificationV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notification []*UserNotification `protobuf:"bytes,1,rep,name=notification,proto3" json:"notification,omitempty"`
}

func (x *GetNotificationV1Response) Reset() {
	*x = GetNotificationV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationV1Response) ProtoMessage() {}

func (x *GetNotificationV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationV1Response.ProtoReflect.Descriptor instead.
func (*GetNotificationV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{4}
}

func (x *GetNotificationV1Response) GetNotification() []*UserNotification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type SendNotificationV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notification *Notification `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
}

func (x *SendNotificationV1Request) Reset() {
	*x = SendNotificationV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendNotificationV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationV1Request) ProtoMessage() {}

func (x *SendNotificationV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationV1Request.ProtoReflect.Descriptor instead.
func (*SendNotificationV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{5}
}

func (x *SendNotificationV1Request) GetNotification() *Notification {
	if x != nil {
		return x.Notification
	}
	return nil
}

type UserNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId uint64 `protobuf:"varint,1,opt,name=notificationId,proto3" json:"notificationId,omitempty"`
	Message        string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UserNotification) Reset() {
	*x = UserNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNotification) ProtoMessage() {}

func (x *UserNotification) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNotification.ProtoReflect.Descriptor instead.
func (*UserNotification) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{6}
}

func (x *UserNotification) GetNotificationId() uint64 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

func (x *UserNotification) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId     uint64   `protobuf:"varint,1,opt,name=notificationId,proto3" json:"notificationId,omitempty"`
	DeviceId           uint64   `protobuf:"varint,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Username           string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Message            string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Lang               Language `protobuf:"varint,5,opt,name=lang,proto3,enum=ozonmp.act_device_api.v1.Language" json:"lang,omitempty"`
	NotificationStatus Status   `protobuf:"varint,6,opt,name=notificationStatus,proto3,enum=ozonmp.act_device_api.v1.Status" json:"notificationStatus,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{7}
}

func (x *Notification) GetNotificationId() uint64 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

func (x *Notification) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *Notification) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Notification) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Notification) GetLang() Language {
	if x != nil {
		return x.Lang
	}
	return Language_LANG_ENGLISH
}

func (x *Notification) GetNotificationStatus() Status {
	if x != nil {
		return x.NotificationStatus
	}
	return Status_STATUS_CREATED
}

type SendNotificationV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationId uint64 `protobuf:"varint,1,opt,name=notificationId,proto3" json:"notificationId,omitempty"`
}

func (x *SendNotificationV1Response) Reset() {
	*x = SendNotificationV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendNotificationV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationV1Response) ProtoMessage() {}

func (x *SendNotificationV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationV1Response.ProtoReflect.Descriptor instead.
func (*SendNotificationV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{8}
}

func (x *SendNotificationV1Response) GetNotificationId() uint64 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Platform  string                 `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	UserId    uint64                 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EnteredAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=entered_at,json=enteredAt,proto3" json:"entered_at,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{9}
}

func (x *Device) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Device) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Device) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Device) GetEnteredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EnteredAt
	}
	return nil
}

type CreateDeviceV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform string `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	UserId   uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CreateDeviceV1Request) Reset() {
	*x = CreateDeviceV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceV1Request) ProtoMessage() {}

func (x *CreateDeviceV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceV1Request.ProtoReflect.Descriptor instead.
func (*CreateDeviceV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{10}
}

func (x *CreateDeviceV1Request) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *CreateDeviceV1Request) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreateDeviceV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId uint64 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *CreateDeviceV1Response) Reset() {
	*x = CreateDeviceV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceV1Response) ProtoMessage() {}

func (x *CreateDeviceV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceV1Response.ProtoReflect.Descriptor instead.
func (*CreateDeviceV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{11}
}

func (x *CreateDeviceV1Response) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

type DescribeDeviceV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId uint64 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *DescribeDeviceV1Request) Reset() {
	*x = DescribeDeviceV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDeviceV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDeviceV1Request) ProtoMessage() {}

func (x *DescribeDeviceV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDeviceV1Request.ProtoReflect.Descriptor instead.
func (*DescribeDeviceV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{12}
}

func (x *DescribeDeviceV1Request) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

type DescribeDeviceV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Device `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DescribeDeviceV1Response) Reset() {
	*x = DescribeDeviceV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDeviceV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDeviceV1Response) ProtoMessage() {}

func (x *DescribeDeviceV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDeviceV1Response.ProtoReflect.Descriptor instead.
func (*DescribeDeviceV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{13}
}

func (x *DescribeDeviceV1Response) GetValue() *Device {
	if x != nil {
		return x.Value
	}
	return nil
}

type ListDevicesV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage uint64 `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
}

func (x *ListDevicesV1Request) Reset() {
	*x = ListDevicesV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDevicesV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesV1Request) ProtoMessage() {}

func (x *ListDevicesV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesV1Request.ProtoReflect.Descriptor instead.
func (*ListDevicesV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{14}
}

func (x *ListDevicesV1Request) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListDevicesV1Request) GetPerPage() uint64 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

type ListDevicesV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Device `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListDevicesV1Response) Reset() {
	*x = ListDevicesV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDevicesV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesV1Response) ProtoMessage() {}

func (x *ListDevicesV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesV1Response.ProtoReflect.Descriptor instead.
func (*ListDevicesV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{15}
}

func (x *ListDevicesV1Response) GetItems() []*Device {
	if x != nil {
		return x.Items
	}
	return nil
}

type UpdateDeviceV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId uint64 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	UserId   uint64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UpdateDeviceV1Request) Reset() {
	*x = UpdateDeviceV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceV1Request) ProtoMessage() {}

func (x *UpdateDeviceV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceV1Request.ProtoReflect.Descriptor instead.
func (*UpdateDeviceV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateDeviceV1Request) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *UpdateDeviceV1Request) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *UpdateDeviceV1Request) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UpdateDeviceV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateDeviceV1Response) Reset() {
	*x = UpdateDeviceV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceV1Response) ProtoMessage() {}

func (x *UpdateDeviceV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceV1Response.ProtoReflect.Descriptor instead.
func (*UpdateDeviceV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateDeviceV1Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RemoveDeviceV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId uint64 `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *RemoveDeviceV1Request) Reset() {
	*x = RemoveDeviceV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveDeviceV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDeviceV1Request) ProtoMessage() {}

func (x *RemoveDeviceV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDeviceV1Request.ProtoReflect.Descriptor instead.
func (*RemoveDeviceV1Request) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{18}
}

func (x *RemoveDeviceV1Request) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

type RemoveDeviceV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Found bool `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
}

func (x *RemoveDeviceV1Response) Reset() {
	*x = RemoveDeviceV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveDeviceV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDeviceV1Response) ProtoMessage() {}

func (x *RemoveDeviceV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDeviceV1Response.ProtoReflect.Descriptor instead.
func (*RemoveDeviceV1Response) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{19}
}

func (x *RemoveDeviceV1Response) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type DeviceEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId uint64  `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Type     uint64  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Status   uint64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Payload  *Device `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *DeviceEvent) Reset() {
	*x = DeviceEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceEvent) ProtoMessage() {}

func (x *DeviceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceEvent.ProtoReflect.Descriptor instead.
func (*DeviceEvent) Descriptor() ([]byte, []int) {
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP(), []int{20}
}

func (x *DeviceEvent) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeviceEvent) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *DeviceEvent) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DeviceEvent) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeviceEvent) GetPayload() *Device {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_ozonmp_act_device_api_v1_act_device_api_proto protoreflect.FileDescriptor

var file_ozonmp_act_device_api_v1_act_device_api_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2f, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x5f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x18, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x42, 0x0a, 0x18, 0x41, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x19, 0x41, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x3a, 0x0a, 0x1c,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x31, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x6b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x67, 0x0a,
	0x19, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0c, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x92, 0x02, 0x0a,
	0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a,
	0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61,
	0x63, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12,
	0x50, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6f, 0x7a,
	0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x12, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x44, 0x0a, 0x1a, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x5e, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x35, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x17, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00,
	0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x18, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x31, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61,
	0x63, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x45,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x65,
	0x72, 0x50, 0x61, 0x67, 0x65, 0x22, 0x4f, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x08, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x20, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x32, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x3d, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x09, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x2e, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x22, 0xc6, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x09, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2a, 0x52, 0x0a, 0x08, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x41, 0x4e, 0x47, 0x5f, 0x45, 0x4e,
	0x47, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x41, 0x4e, 0x47, 0x5f,
	0x52, 0x55, 0x53, 0x53, 0x49, 0x41, 0x4e, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x41, 0x4e,
	0x47, 0x5f, 0x45, 0x53, 0x50, 0x41, 0x4e, 0x4f, 0x4c, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4c,
	0x41, 0x4e, 0x47, 0x5f, 0x49, 0x54, 0x41, 0x4c, 0x49, 0x41, 0x4e, 0x10, 0x03, 0x2a, 0x4a, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53,
	0x53, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45,
	0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x02, 0x32, 0xbc, 0x05, 0x0a, 0x19, 0x41, 0x63,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x69,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa0, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x31, 0x12, 0x33,
	0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56,
	0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x19, 0x22, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x98, 0x01, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32,
	0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74, 0x5f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12,
	0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xad, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x6b, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e,
	0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x6b, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x1a, 0x29, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x61, 0x63, 0x6b, 0x2f, 0x7b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x7d, 0x12, 0xb0, 0x01, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x36, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70,
	0x2e, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x7b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x7d, 0x30, 0x01, 0x32, 0x8d, 0x06, 0x0a, 0x13, 0x41, 0x63, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x8f, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x56, 0x31, 0x12, 0x2f, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63,
	0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x31, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3a,
	0x01, 0x2a, 0x12, 0x9e, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x31, 0x12, 0x31, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70,
	0x2e, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6f, 0x7a, 0x6f,
	0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0x89, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x56, 0x31, 0x12, 0x2e, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61,
	0x63, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61,
	0x63, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x56, 0x31, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12,
	0x9b, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x56, 0x31, 0x12, 0x2f, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74, 0x5f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x1a, 0x1b, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x98, 0x01,
	0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x31,
	0x12, 0x2f, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74, 0x5f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x6d, 0x70, 0x2e, 0x61, 0x63, 0x74, 0x5f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x2a, 0x1b, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0x51, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x71, 0x61, 0x2f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x2d, 0x34, 0x2f, 0x61, 0x63, 0x74, 0x2d, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x63,
	0x74, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x3b, 0x61, 0x63, 0x74,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescOnce sync.Once
	file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescData = file_ozonmp_act_device_api_v1_act_device_api_proto_rawDesc
)

func file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescGZIP() []byte {
	file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescOnce.Do(func() {
		file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescData)
	})
	return file_ozonmp_act_device_api_v1_act_device_api_proto_rawDescData
}

var file_ozonmp_act_device_api_v1_act_device_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_ozonmp_act_device_api_v1_act_device_api_proto_goTypes = []interface{}{
	(Language)(0),                        // 0: ozonmp.act_device_api.v1.Language
	(Status)(0),                          // 1: ozonmp.act_device_api.v1.Status
	(*AckNotificationV1Request)(nil),     // 2: ozonmp.act_device_api.v1.AckNotificationV1Request
	(*AckNotificationV1Response)(nil),    // 3: ozonmp.act_device_api.v1.AckNotificationV1Response
	(*SubscribeNotificationRequest)(nil), // 4: ozonmp.act_device_api.v1.SubscribeNotificationRequest
	(*GetNotificationV1Request)(nil),     // 5: ozonmp.act_device_api.v1.GetNotificationV1Request
	(*GetNotificationV1Response)(nil),    // 6: ozonmp.act_device_api.v1.GetNotificationV1Response
	(*SendNotificationV1Request)(nil),    // 7: ozonmp.act_device_api.v1.SendNotificationV1Request
	(*UserNotification)(nil),             // 8: ozonmp.act_device_api.v1.UserNotification
	(*Notification)(nil),                 // 9: ozonmp.act_device_api.v1.Notification
	(*SendNotificationV1Response)(nil),   // 10: ozonmp.act_device_api.v1.SendNotificationV1Response
	(*Device)(nil),                       // 11: ozonmp.act_device_api.v1.Device
	(*CreateDeviceV1Request)(nil),        // 12: ozonmp.act_device_api.v1.CreateDeviceV1Request
	(*CreateDeviceV1Response)(nil),       // 13: ozonmp.act_device_api.v1.CreateDeviceV1Response
	(*DescribeDeviceV1Request)(nil),      // 14: ozonmp.act_device_api.v1.DescribeDeviceV1Request
	(*DescribeDeviceV1Response)(nil),     // 15: ozonmp.act_device_api.v1.DescribeDeviceV1Response
	(*ListDevicesV1Request)(nil),         // 16: ozonmp.act_device_api.v1.ListDevicesV1Request
	(*ListDevicesV1Response)(nil),        // 17: ozonmp.act_device_api.v1.ListDevicesV1Response
	(*UpdateDeviceV1Request)(nil),        // 18: ozonmp.act_device_api.v1.UpdateDeviceV1Request
	(*UpdateDeviceV1Response)(nil),       // 19: ozonmp.act_device_api.v1.UpdateDeviceV1Response
	(*RemoveDeviceV1Request)(nil),        // 20: ozonmp.act_device_api.v1.RemoveDeviceV1Request
	(*RemoveDeviceV1Response)(nil),       // 21: ozonmp.act_device_api.v1.RemoveDeviceV1Response
	(*DeviceEvent)(nil),                  // 22: ozonmp.act_device_api.v1.DeviceEvent
	(*timestamppb.Timestamp)(nil),        // 23: google.protobuf.Timestamp
}
var file_ozonmp_act_device_api_v1_act_device_api_proto_depIdxs = []int32{
	8,  // 0: ozonmp.act_device_api.v1.GetNotificationV1Response.notification:type_name -> ozonmp.act_device_api.v1.UserNotification
	9,  // 1: ozonmp.act_device_api.v1.SendNotificationV1Request.notification:type_name -> ozonmp.act_device_api.v1.Notification
	0,  // 2: ozonmp.act_device_api.v1.Notification.lang:type_name -> ozonmp.act_device_api.v1.Language
	1,  // 3: ozonmp.act_device_api.v1.Notification.notificationStatus:type_name -> ozonmp.act_device_api.v1.Status
	23, // 4: ozonmp.act_device_api.v1.Device.entered_at:type_name -> google.protobuf.Timestamp
	11, // 5: ozonmp.act_device_api.v1.DescribeDeviceV1Response.value:type_name -> ozonmp.act_device_api.v1.Device
	11, // 6: ozonmp.act_device_api.v1.ListDevicesV1Response.items:type_name -> ozonmp.act_device_api.v1.Device
	11, // 7: ozonmp.act_device_api.v1.DeviceEvent.payload:type_name -> ozonmp.act_device_api.v1.Device
	7,  // 8: ozonmp.act_device_api.v1.ActNotificationApiService.SendNotificationV1:input_type -> ozonmp.act_device_api.v1.SendNotificationV1Request
	5,  // 9: ozonmp.act_device_api.v1.ActNotificationApiService.GetNotification:input_type -> ozonmp.act_device_api.v1.GetNotificationV1Request
	2,  // 10: ozonmp.act_device_api.v1.ActNotificationApiService.AckNotification:input_type -> ozonmp.act_device_api.v1.AckNotificationV1Request
	4,  // 11: ozonmp.act_device_api.v1.ActNotificationApiService.SubscribeNotification:input_type -> ozonmp.act_device_api.v1.SubscribeNotificationRequest
	12, // 12: ozonmp.act_device_api.v1.ActDeviceApiService.CreateDeviceV1:input_type -> ozonmp.act_device_api.v1.CreateDeviceV1Request
	14, // 13: ozonmp.act_device_api.v1.ActDeviceApiService.DescribeDeviceV1:input_type -> ozonmp.act_device_api.v1.DescribeDeviceV1Request
	16, // 14: ozonmp.act_device_api.v1.ActDeviceApiService.ListDevicesV1:input_type -> ozonmp.act_device_api.v1.ListDevicesV1Request
	18, // 15: ozonmp.act_device_api.v1.ActDeviceApiService.UpdateDeviceV1:input_type -> ozonmp.act_device_api.v1.UpdateDeviceV1Request
	20, // 16: ozonmp.act_device_api.v1.ActDeviceApiService.RemoveDeviceV1:input_type -> ozonmp.act_device_api.v1.RemoveDeviceV1Request
	10, // 17: ozonmp.act_device_api.v1.ActNotificationApiService.SendNotificationV1:output_type -> ozonmp.act_device_api.v1.SendNotificationV1Response
	6,  // 18: ozonmp.act_device_api.v1.ActNotificationApiService.GetNotification:output_type -> ozonmp.act_device_api.v1.GetNotificationV1Response
	3,  // 19: ozonmp.act_device_api.v1.ActNotificationApiService.AckNotification:output_type -> ozonmp.act_device_api.v1.AckNotificationV1Response
	8,  // 20: ozonmp.act_device_api.v1.ActNotificationApiService.SubscribeNotification:output_type -> ozonmp.act_device_api.v1.UserNotification
	13, // 21: ozonmp.act_device_api.v1.ActDeviceApiService.CreateDeviceV1:output_type -> ozonmp.act_device_api.v1.CreateDeviceV1Response
	15, // 22: ozonmp.act_device_api.v1.ActDeviceApiService.DescribeDeviceV1:output_type -> ozonmp.act_device_api.v1.DescribeDeviceV1Response
	17, // 23: ozonmp.act_device_api.v1.ActDeviceApiService.ListDevicesV1:output_type -> ozonmp.act_device_api.v1.ListDevicesV1Response
	19, // 24: ozonmp.act_device_api.v1.ActDeviceApiService.UpdateDeviceV1:output_type -> ozonmp.act_device_api.v1.UpdateDeviceV1Response
	21, // 25: ozonmp.act_device_api.v1.ActDeviceApiService.RemoveDeviceV1:output_type -> ozonmp.act_device_api.v1.RemoveDeviceV1Response
	17, // [17:26] is the sub-list for method output_type
	8,  // [8:17] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_ozonmp_act_device_api_v1_act_device_api_proto_init() }
func file_ozonmp_act_device_api_v1_act_device_api_proto_init() {
	if File_ozonmp_act_device_api_v1_act_device_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckNotificationV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckNotificationV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendNotificationV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendNotificationV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeDeviceV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeDeviceV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDevicesV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDevicesV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveDeviceV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveDeviceV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ozonmp_act_device_api_v1_act_device_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_ozonmp_act_device_api_v1_act_device_api_proto_goTypes,
		DependencyIndexes: file_ozonmp_act_device_api_v1_act_device_api_proto_depIdxs,
		EnumInfos:         file_ozonmp_act_device_api_v1_act_device_api_proto_enumTypes,
		MessageInfos:      file_ozonmp_act_device_api_v1_act_device_api_proto_msgTypes,
	}.Build()
	File_ozonmp_act_device_api_v1_act_device_api_proto = out.File
	file_ozonmp_act_device_api_v1_act_device_api_proto_rawDesc = nil
	file_ozonmp_act_device_api_v1_act_device_api_proto_goTypes = nil
	file_ozonmp_act_device_api_v1_act_device_api_proto_depIdxs = nil
}
